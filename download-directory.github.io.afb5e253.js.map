{"version":3,"sources":["../src/FileSaver.js","node_modules/atob-lite/atob-browser.js","node_modules/is-base64/is-base64.js","node_modules/string-to-arraybuffer/index.js","node_modules/dtype/index.js","node_modules/flatten-vertex-data/index.js","node_modules/to-array-buffer/index.js","node_modules/simple-mime/simple-mime.js","node_modules/is-blob/index.js","node_modules/save-file/src/to-blob.js","node_modules/save-file/browser.js","node_modules/list-github-dir-content/browser-fetch.js","node_modules/list-github-dir-content/index.js","index.js"],"names":["module","exports","dtype","Int8Array","Int16Array","Int32Array","Uint8Array","Uint16Array","Uint32Array","Float32Array","Float64Array","Array","Uint8ClampedArray","toString","Object","prototype","x","Blob","call","urlParserRegex","updateStatus","status","extra","el","document","querySelector","innerHTML","console","log","textContent","waitForToken","input","localStorage","addEventListener","checkValidity","token","value","toggle","checked","Promise","resolve","handler","removeEventListener","fetchRepoInfo","repo","response","fetch","headers","Authorization","Error","get","ok","json","init","user","repository","ref","dir","query","URLSearchParams","location","search","parsedUrl","URL","exec","pathname","navigator","onLine","private","repoIsPrivate","files","listContent","viaTreesApi","directory","decodeURIComponent","getFullData","length","map","file","path","join","controller","AbortController","downloaded","zip","JSZip","download","blob","url","signal","statusText","content","decoder","fetchPrivateFile","fetchPublicFile","replace","binary","all","error","abort","message","startsWith","zipBlob","generateAsync","type","window","serviceWorker","register"],"mappings":"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","file":"download-directory.github.io.afb5e253.js","sourceRoot":"..","sourcesContent":["/*\n* FileSaver.js\n* A saveAs() FileSaver implementation.\n*\n* By Eli Grey, http://eligrey.com\n*\n* License : https://github.com/eligrey/FileSaver.js/blob/master/LICENSE.md (MIT)\n* source  : http://purl.eligrey.com/github/FileSaver.js\n*/\n\n// The one and only way of getting global scope in all environments\n// https://stackoverflow.com/q/3277182/1008999\nvar _global = typeof window === 'object' && window.window === window\n  ? window : typeof self === 'object' && self.self === self\n  ? self : typeof global === 'object' && global.global === global\n  ? global\n  : this\n\nfunction bom (blob, opts) {\n  if (typeof opts === 'undefined') opts = { autoBom: false }\n  else if (typeof opts !== 'object') {\n    console.warn('Deprecated: Expected third argument to be a object')\n    opts = { autoBom: !opts }\n  }\n\n  // prepend BOM for UTF-8 XML and text/* types (including HTML)\n  // note: your browser will automatically convert UTF-16 U+FEFF to EF BB BF\n  if (opts.autoBom && /^\\s*(?:text\\/\\S*|application\\/xml|\\S*\\/\\S*\\+xml)\\s*;.*charset\\s*=\\s*utf-8/i.test(blob.type)) {\n    return new Blob([String.fromCharCode(0xFEFF), blob], { type: blob.type })\n  }\n  return blob\n}\n\nfunction download (url, name, opts) {\n  var xhr = new XMLHttpRequest()\n  xhr.open('GET', url)\n  xhr.responseType = 'blob'\n  xhr.onload = function () {\n    saveAs(xhr.response, name, opts)\n  }\n  xhr.onerror = function () {\n    console.error('could not download file')\n  }\n  xhr.send()\n}\n\nfunction corsEnabled (url) {\n  var xhr = new XMLHttpRequest()\n  // use sync to avoid popup blocker\n  xhr.open('HEAD', url, false)\n  try {\n    xhr.send()\n  } catch (e) {}\n  return xhr.status >= 200 && xhr.status <= 299\n}\n\n// `a.click()` doesn't work for all browsers (#465)\nfunction click (node) {\n  try {\n    node.dispatchEvent(new MouseEvent('click'))\n  } catch (e) {\n    var evt = document.createEvent('MouseEvents')\n    evt.initMouseEvent('click', true, true, window, 0, 0, 0, 80,\n                          20, false, false, false, false, 0, null)\n    node.dispatchEvent(evt)\n  }\n}\n\nvar saveAs = _global.saveAs || (\n  // probably in some web worker\n  (typeof window !== 'object' || window !== _global)\n    ? function saveAs () { /* noop */ }\n\n  // Use download attribute first if possible (#193 Lumia mobile)\n  : 'download' in HTMLAnchorElement.prototype\n  ? function saveAs (blob, name, opts) {\n    var URL = _global.URL || _global.webkitURL\n    var a = document.createElement('a')\n    name = name || blob.name || 'download'\n\n    a.download = name\n    a.rel = 'noopener' // tabnabbing\n\n    // TODO: detect chrome extensions & packaged apps\n    // a.target = '_blank'\n\n    if (typeof blob === 'string') {\n      // Support regular links\n      a.href = blob\n      if (a.origin !== location.origin) {\n        corsEnabled(a.href)\n          ? download(blob, name, opts)\n          : click(a, a.target = '_blank')\n      } else {\n        click(a)\n      }\n    } else {\n      // Support blobs\n      a.href = URL.createObjectURL(blob)\n      setTimeout(function () { URL.revokeObjectURL(a.href) }, 4E4) // 40s\n      setTimeout(function () { click(a) }, 0)\n    }\n  }\n\n  // Use msSaveOrOpenBlob as a second approach\n  : 'msSaveOrOpenBlob' in navigator\n  ? function saveAs (blob, name, opts) {\n    name = name || blob.name || 'download'\n\n    if (typeof blob === 'string') {\n      if (corsEnabled(blob)) {\n        download(blob, name, opts)\n      } else {\n        var a = document.createElement('a')\n        a.href = blob\n        a.target = '_blank'\n        setTimeout(function () { click(a) })\n      }\n    } else {\n      navigator.msSaveOrOpenBlob(bom(blob, opts), name)\n    }\n  }\n\n  // Fallback to using FileReader and a popup\n  : function saveAs (blob, name, opts, popup) {\n    // Open a popup immediately do go around popup blocker\n    // Mostly only available on user interaction and the fileReader is async so...\n    popup = popup || open('', '_blank')\n    if (popup) {\n      popup.document.title =\n      popup.document.body.innerText = 'downloading...'\n    }\n\n    if (typeof blob === 'string') return download(blob, name, opts)\n\n    var force = blob.type === 'application/octet-stream'\n    var isSafari = /constructor/i.test(_global.HTMLElement) || _global.safari\n    var isChromeIOS = /CriOS\\/[\\d]+/.test(navigator.userAgent)\n\n    if ((isChromeIOS || (force && isSafari)) && typeof FileReader === 'object') {\n      // Safari doesn't allow downloading of blob URLs\n      var reader = new FileReader()\n      reader.onloadend = function () {\n        var url = reader.result\n        url = isChromeIOS ? url : url.replace(/^data:[^;]*;/, 'data:attachment/file;')\n        if (popup) popup.location.href = url\n        else location = url\n        popup = null // reverse-tabnabbing #460\n      }\n      reader.readAsDataURL(blob)\n    } else {\n      var URL = _global.URL || _global.webkitURL\n      var url = URL.createObjectURL(blob)\n      if (popup) popup.location = url\n      else location.href = url\n      popup = null // reverse-tabnabbing #460\n      setTimeout(function () { URL.revokeObjectURL(url) }, 4E4) // 40s\n    }\n  }\n)\n\n_global.saveAs = saveAs.saveAs = saveAs\n\nif (typeof module !== 'undefined') {\n  module.exports = saveAs;\n}\n","module.exports = function _atob(str) {\n  return atob(str)\n}\n","(function(root) {\n  'use strict';\n\n  function isBase64(v, opts) {\n    if (v instanceof Boolean || typeof v === 'boolean') {\n      return false\n    }\n    if (!(opts instanceof Object)) {\n      opts = {}\n    }\n    if (opts.hasOwnProperty('allowBlank') && !opts.allowBlank && v === '') {\n      return false\n    }\n\n    var regex = '(?:[A-Za-z0-9+\\\\/]{4})*(?:[A-Za-z0-9+\\\\/]{2}==|[A-Za-z0-9+\\/]{3}=)?';\n\n    if (opts.mime) {\n      regex = '(data:\\\\w+\\\\/[a-zA-Z\\\\+\\\\-\\\\.]+;base64,)?' + regex\n    }\n\n    if (opts.paddingRequired === false) {\n      regex = '(?:[A-Za-z0-9+\\\\/]{4})*(?:[A-Za-z0-9+\\\\/]{2}(==)?|[A-Za-z0-9+\\\\/]{3}=?)?'\n    }\n\n    return (new RegExp('^' + regex + '$', 'gi')).test(v);\n  }\n\n  if (typeof exports !== 'undefined') {\n    if (typeof module !== 'undefined' && module.exports) {\n      exports = module.exports = isBase64;\n    }\n    exports.isBase64 = isBase64;\n  } else if (typeof define === 'function' && define.amd) {\n    define([], function() {\n      return isBase64;\n    });\n  } else {\n    root.isBase64 = isBase64;\n  }\n})(this);\n","/**\r\n * @module  string-to-arraybuffer\r\n */\r\n\r\n'use strict'\r\n\r\nvar atob = require('atob-lite')\r\nvar isBase64 = require('is-base64')\r\n\r\nmodule.exports = function stringToArrayBuffer (arg) {\r\n\tif (typeof arg !== 'string') throw Error('Argument should be a string')\r\n\r\n\t//valid data uri\r\n\tif (/^data\\:/i.test(arg)) return decode(arg)\r\n\r\n\t//base64\r\n\tif (isBase64(arg)) arg = atob(arg)\r\n\r\n\treturn str2ab(arg)\r\n}\r\n\r\nfunction str2ab (str) {\r\n\tvar array = new Uint8Array(str.length);\r\n\tfor(var i = 0; i < str.length; i++) {\r\n\t\tarray[i] = str.charCodeAt(i);\r\n\t}\r\n\treturn array.buffer\r\n}\r\n\r\nfunction decode(uri) {\r\n\t// strip newlines\r\n\turi = uri.replace(/\\r?\\n/g, '');\r\n\r\n\t// split the URI up into the \"metadata\" and the \"data\" portions\r\n\tvar firstComma = uri.indexOf(',');\r\n\tif (-1 === firstComma || firstComma <= 4) throw new TypeError('malformed data-URI');\r\n\r\n\t// remove the \"data:\" scheme and parse the metadata\r\n\tvar meta = uri.substring(5, firstComma).split(';');\r\n\r\n\tvar base64 = false;\r\n\tvar charset = 'US-ASCII';\r\n\tfor (var i = 0; i < meta.length; i++) {\r\n\t\tif ('base64' == meta[i]) {\r\n\t\t\tbase64 = true;\r\n\t\t} else if (0 == meta[i].indexOf('charset=')) {\r\n\t\t\tcharset = meta[i].substring(8);\r\n\t\t}\r\n\t}\r\n\r\n\t// get the encoded data portion and decode URI-encoded chars\r\n\tvar data = unescape(uri.substring(firstComma + 1));\r\n\r\n\tif (base64) data = atob(data)\r\n\r\n\tvar abuf = str2ab(data)\r\n\r\n\tabuf.type = meta[0] || 'text/plain'\r\n\tabuf.charset = charset\r\n\r\n\treturn abuf\r\n}\r\n","module.exports = function(dtype) {\n  switch (dtype) {\n    case 'int8':\n      return Int8Array\n    case 'int16':\n      return Int16Array\n    case 'int32':\n      return Int32Array\n    case 'uint8':\n      return Uint8Array\n    case 'uint16':\n      return Uint16Array\n    case 'uint32':\n      return Uint32Array\n    case 'float32':\n      return Float32Array\n    case 'float64':\n      return Float64Array\n    case 'array':\n      return Array\n    case 'uint8_clamped':\n      return Uint8ClampedArray\n  }\n}\n","/*eslint new-cap:0*/\nvar dtype = require('dtype')\n\nmodule.exports = flattenVertexData\n\nfunction flattenVertexData (data, output, offset) {\n  if (!data) throw new TypeError('must specify data as first parameter')\n  offset = +(offset || 0) | 0\n\n  if (Array.isArray(data) && (data[0] && typeof data[0][0] === 'number')) {\n    var dim = data[0].length\n    var length = data.length * dim\n    var i, j, k, l\n\n    // no output specified, create a new typed array\n    if (!output || typeof output === 'string') {\n      output = new (dtype(output || 'float32'))(length + offset)\n    }\n\n    var dstLength = output.length - offset\n    if (length !== dstLength) {\n      throw new Error('source length ' + length + ' (' + dim + 'x' + data.length + ')' +\n        ' does not match destination length ' + dstLength)\n    }\n\n    for (i = 0, k = offset; i < data.length; i++) {\n      for (j = 0; j < dim; j++) {\n        output[k++] = data[i][j] === null ? NaN : data[i][j]\n      }\n    }\n  } else {\n    if (!output || typeof output === 'string') {\n      // no output, create a new one\n      var Ctor = dtype(output || 'float32')\n\n      // handle arrays separately due to possible nulls\n      if (Array.isArray(data) || output === 'array') {\n        output = new Ctor(data.length + offset)\n        for (i = 0, k = offset, l = output.length; k < l; k++, i++) {\n          output[k] = data[i] === null ? NaN : data[i]\n        }\n      } else {\n        if (offset === 0) {\n          output = new Ctor(data)\n        } else {\n          output = new Ctor(data.length + offset)\n\n          output.set(data, offset)\n        }\n      }\n    } else {\n      // store output in existing array\n      output.set(data, offset)\n    }\n  }\n\n  return output\n}\n","/**\r\n * @module  to-array-buffer\r\n */\r\n\r\n'use strict'\r\n\r\nvar str2ab = require('string-to-arraybuffer')\r\nvar flat = require('flatten-vertex-data')\r\n// var isBlob = require('is-blob')\r\n\r\n\r\nmodule.exports = function toArrayBuffer (arg) {\r\n\t//zero-length or undefined-like\r\n\tif (!arg) return null\r\n\r\n\t//array buffer\r\n\tif (arg instanceof ArrayBuffer) return arg\r\n\r\n\t//try to decode data-uri\r\n\tif (typeof arg === 'string') {\r\n\t\treturn str2ab(arg)\r\n\t}\r\n\r\n\t// File & Blob\r\n\t// if (isBlob(src) || (src instanceof global.File)) {\r\n\t\t// FIXME: we cannot use it here bc FileReader is async\r\n\t// }\r\n\r\n\t//array buffer view: TypedArray, DataView, Buffer etc\r\n\tif (ArrayBuffer.isView(arg)) {\r\n\t\t// if byteOffset is not 0, return sub-reference (slice is the only way)\r\n\t\tif (arg.byteOffset) {\r\n\t\t\treturn arg.buffer.slice(arg.byteOffset, arg.byteOffset + arg.byteLength)\r\n\t\t}\r\n\t\treturn arg.buffer\r\n\t}\r\n\r\n\t//buffer/data nested: NDArray, ImageData etc.\r\n\t//FIXME: NDArrays with custom data type may be invalid for this procedure\r\n\tif (arg.buffer || arg.data || arg._data) {\r\n\t\tvar result = toArrayBuffer(arg.buffer || arg.data || arg._data)\r\n\t\treturn result\r\n\t}\r\n\r\n\t// detect if flat\r\n\tif (Array.isArray(arg)) {\r\n\t\tfor (var i = 0; i < arg.length; i++) {\r\n\t\t\tif (arg[i].length != null) {\r\n\t\t\t\targ = flat(arg)\r\n\t\t\t\tbreak\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t//array-like or unknown\r\n\t//consider Uint8Array knows how to treat the input\r\n\tvar result = new Uint8Array(arg)\r\n\r\n\tif (!result.length) return null\r\n\treturn result.buffer\r\n}\r\n","// A simple mime database.\nvar types;\nmodule.exports = function setup(defaultMime) {\n  return function getMime(path) {\n    path = path.toLowerCase().trim();\n    var index = path.lastIndexOf(\"/\");\n    if (index >= 0) {\n      path = path.substr(index + 1);\n    }\n    index = path.lastIndexOf(\".\");\n    if (index >= 0) {\n      path = path.substr(index + 1);\n    }\n    return types[path] || defaultMime;\n  };\n};\n\n// Borrowed and passed around from who knows where, last grabbed from connect.\ntypes = {\n  \"3gp\": \"video/3gpp\",\n  a: \"application/octet-stream\",\n  ai: \"application/postscript\",\n  aif: \"audio/x-aiff\",\n  aiff: \"audio/x-aiff\",\n  asc: \"application/pgp-signature\",\n  asf: \"video/x-ms-asf\",\n  asm: \"text/x-asm\",\n  asx: \"video/x-ms-asf\",\n  atom: \"application/atom+xml\",\n  au: \"audio/basic\",\n  avi: \"video/x-msvideo\",\n  bat: \"application/x-msdownload\",\n  bin: \"application/octet-stream\",\n  bmp: \"image/bmp\",\n  bz2: \"application/x-bzip2\",\n  c: \"text/x-csrc\",\n  cab: \"application/vnd.ms-cab-compressed\",\n  can: \"application/candor\",\n  cc: \"text/x-c++src\",\n  chm: \"application/vnd.ms-htmlhelp\",\n  \"class\": \"application/octet-stream\",\n  com: \"application/x-msdownload\",\n  conf: \"text/plain\",\n  cpp: \"text/x-c\",\n  crt: \"application/x-x509-ca-cert\",\n  css: \"text/css\",\n  csv: \"text/csv\",\n  cxx: \"text/x-c\",\n  deb: \"application/x-debian-package\",\n  der: \"application/x-x509-ca-cert\",\n  diff: \"text/x-diff\",\n  djv: \"image/vnd.djvu\",\n  djvu: \"image/vnd.djvu\",\n  dll: \"application/x-msdownload\",\n  dmg: \"application/octet-stream\",\n  doc: \"application/msword\",\n  dot: \"application/msword\",\n  dtd: \"application/xml-dtd\",\n  dvi: \"application/x-dvi\",\n  ear: \"application/java-archive\",\n  eml: \"message/rfc822\",\n  eps: \"application/postscript\",\n  exe: \"application/x-msdownload\",\n  f: \"text/x-fortran\",\n  f77: \"text/x-fortran\",\n  f90: \"text/x-fortran\",\n  flv: \"video/x-flv\",\n  \"for\": \"text/x-fortran\",\n  gem: \"application/octet-stream\",\n  gemspec: \"text/x-script.ruby\",\n  gif: \"image/gif\",\n  gyp: \"text/x-script.python\",\n  gypi: \"text/x-script.python\",\n  gz: \"application/x-gzip\",\n  h: \"text/x-chdr\",\n  hh: \"text/x-c++hdr\",\n  htm: \"text/html\",\n  html: \"text/html\",\n  ico: \"image/vnd.microsoft.icon\",\n  ics: \"text/calendar\",\n  ifb: \"text/calendar\",\n  iso: \"application/octet-stream\",\n  jar: \"application/java-archive\",\n  java: \"text/x-java-source\",\n  jnlp: \"application/x-java-jnlp-file\",\n  jpeg: \"image/jpeg\",\n  jpg: \"image/jpeg\",\n  js: \"application/javascript\",\n  json: \"application/json\",\n  less: \"text/css\",\n  log: \"text/plain\",\n  lua: \"text/x-script.lua\",\n  luac: \"application/x-bytecode.lua\",\n  makefile: \"text/x-makefile\",\n  m3u: \"audio/x-mpegurl\",\n  m4v: \"video/mp4\",\n  man: \"text/troff\",\n  manifest: \"text/cache-manifest\",\n  markdown: \"text/x-markdown\",\n  mathml: \"application/mathml+xml\",\n  mbox: \"application/mbox\",\n  mdoc: \"text/troff\",\n  md: \"text/x-markdown\",\n  me: \"text/troff\",\n  mid: \"audio/midi\",\n  midi: \"audio/midi\",\n  mime: \"message/rfc822\",\n  mml: \"application/mathml+xml\",\n  mng: \"video/x-mng\",\n  mov: \"video/quicktime\",\n  mp3: \"audio/mpeg\",\n  mp4: \"video/mp4\",\n  mp4v: \"video/mp4\",\n  mpeg: \"video/mpeg\",\n  mpg: \"video/mpeg\",\n  ms: \"text/troff\",\n  msi: \"application/x-msdownload\",\n  odp: \"application/vnd.oasis.opendocument.presentation\",\n  ods: \"application/vnd.oasis.opendocument.spreadsheet\",\n  odt: \"application/vnd.oasis.opendocument.text\",\n  ogg: \"application/ogg\",\n  p: \"text/x-pascal\",\n  pas: \"text/x-pascal\",\n  pbm: \"image/x-portable-bitmap\",\n  pdf: \"application/pdf\",\n  pem: \"application/x-x509-ca-cert\",\n  pgm: \"image/x-portable-graymap\",\n  pgp: \"application/pgp-encrypted\",\n  pkg: \"application/octet-stream\",\n  pl: \"text/x-script.perl\",\n  pm: \"text/x-script.perl-module\",\n  png: \"image/png\",\n  pnm: \"image/x-portable-anymap\",\n  ppm: \"image/x-portable-pixmap\",\n  pps: \"application/vnd.ms-powerpoint\",\n  ppt: \"application/vnd.ms-powerpoint\",\n  ps: \"application/postscript\",\n  psd: \"image/vnd.adobe.photoshop\",\n  py: \"text/x-script.python\",\n  qt: \"video/quicktime\",\n  ra: \"audio/x-pn-realaudio\",\n  rake: \"text/x-script.ruby\",\n  ram: \"audio/x-pn-realaudio\",\n  rar: \"application/x-rar-compressed\",\n  rb: \"text/x-script.ruby\",\n  rdf: \"application/rdf+xml\",\n  roff: \"text/troff\",\n  rpm: \"application/x-redhat-package-manager\",\n  rss: \"application/rss+xml\",\n  rtf: \"application/rtf\",\n  ru: \"text/x-script.ruby\",\n  s: \"text/x-asm\",\n  sgm: \"text/sgml\",\n  sgml: \"text/sgml\",\n  sh: \"application/x-sh\",\n  sig: \"application/pgp-signature\",\n  snd: \"audio/basic\",\n  so: \"application/octet-stream\",\n  svg: \"image/svg+xml\",\n  svgz: \"image/svg+xml\",\n  swf: \"application/x-shockwave-flash\",\n  t: \"text/troff\",\n  tar: \"application/x-tar\",\n  tbz: \"application/x-bzip-compressed-tar\",\n  tci: \"application/x-topcloud\",\n  tcl: \"application/x-tcl\",\n  tex: \"application/x-tex\",\n  texi: \"application/x-texinfo\",\n  texinfo: \"application/x-texinfo\",\n  text: \"text/plain\",\n  tif: \"image/tiff\",\n  tiff: \"image/tiff\",\n  torrent: \"application/x-bittorrent\",\n  tr: \"text/troff\",\n  ttf: \"application/x-font-ttf\",\n  txt: \"text/plain\",\n  vcf: \"text/x-vcard\",\n  vcs: \"text/x-vcalendar\",\n  vrml: \"model/vrml\",\n  war   : \"application/java-archive\",\n  wav   : \"audio/x-wav\",\n  webapp: \"application/x-web-app-manifest+json\",\n  webm: \"video/webm\",\n  wma: \"audio/x-ms-wma\",\n  wmv: \"video/x-ms-wmv\",\n  wmx: \"video/x-ms-wmx\",\n  wrl: \"model/vrml\",\n  wsdl: \"application/wsdl+xml\",\n  xbm: \"image/x-xbitmap\",\n  xhtml: \"application/xhtml+xml\",\n  xls: \"application/vnd.ms-excel\",\n  xml: \"application/xml\",\n  xpm: \"image/x-xpixmap\",\n  xsl: \"application/xml\",\n  xslt: \"application/xslt+xml\",\n  yaml: \"text/yaml\",\n  yml: \"text/yaml\",\n  zip: \"application/zip\"\n};\n","/* globals Blob */\n'use strict';\nvar toString = Object.prototype.toString;\n\nmodule.exports = function (x) {\n\treturn x instanceof Blob || toString.call(x) === '[object Blob]';\n};\n","'use strict'\r\n\r\nvar ab = require('to-array-buffer')\r\nvar getMimeType = require('simple-mime')('application/octect-stream')\r\nvar isBlob = require('is-blob')\r\n\r\nmodule.exports = function toBlob (data, filename) {\r\n\t//create blob, if not already\r\n\tif (!isBlob(data) && !(data instanceof File)) {\r\n\t\tdata = ab(data)\r\n\t\tvar mime = getMimeType(filename || '')\r\n\t\tdata = new Blob([data], {type: mime})\r\n\t}\r\n\r\n\treturn data\r\n}\r\n","/**\r\n * Save file in browser\r\n *\r\n * @module save-file/browser\r\n */\r\n'use strict'\r\n\r\nvar saveAs = require('file-saver').saveAs\r\nvar toBlob = require('./src/to-blob')\r\n\r\nvar planned = null\r\n\r\nmodule.exports = save\r\nmodule.exports.save = save\r\nmodule.exports.saveSync = saveSync\r\n\r\nfunction save (data, filename) {\r\n\t// swap data/filename\r\n\tif (typeof data === 'string') {\r\n\t\t// writing string to string - take the lengthier\r\n\t\tif (typeof filename !== 'string' || filename.length > data.length) {\r\n\t\t\tvar x = filename\r\n\t\t\tfilename = data\r\n\t\t\tdata = x\r\n\t\t}\r\n\t}\r\n\r\n\tvar blob = toBlob(data, filename)\r\n\r\n\tif (planned) {\r\n\t\treturn planned.then(function () {\r\n\t\t\tplanned = save(data, filename)\r\n\t\t\treturn planned\r\n\t\t})\r\n\t}\r\n\telse {\r\n\t\tplanned = new Promise(function (ok, nok) {\r\n\r\n\t\t\tsaveAs(blob, filename)\r\n\r\n\t\t\t//prompt next dialog only when window got focus back\r\n\t\t\twindow.addEventListener('focus', function resolve() {\r\n\t\t\t\tplanned = null\r\n\t\t\t\twindow.removeEventListener('focus', resolve)\r\n\t\t\t\tok()\r\n\t\t\t})\r\n\t\t})\r\n\r\n\t\treturn planned\r\n\t}\r\n}\r\n\r\nfunction saveSync (data, filename) {\r\n\treturn saveAs(toBlob(data, filename), filename)\r\n}\r\n","module.exports = fetch;\n","const fetch = require('node-fetch'); // Automatically excluded in browser bundles\n\nasync function api(endpoint, token) {\n\tconst response = await fetch(`https://api.github.com/repos/${endpoint}`, {\n\t\theaders: token ? {\n\t\t\tAuthorization: `Bearer ${token}`\n\t\t} : undefined\n\t});\n\treturn response.json();\n}\n\n// Great for downloads with few sub directories on big repos\n// Cons: many requests if the repo has a lot of nested dirs\nasync function viaContentsApi({\n\tuser,\n\trepository,\n\tref = 'HEAD',\n\tdirectory,\n\ttoken,\n\tgetFullData = false\n}) {\n\tconst files = [];\n\tconst requests = [];\n\tconst contents = await api(`${user}/${repository}/contents/${directory}?ref=${ref}`, token);\n\n\tif (contents.message === 'Not Found') {\n\t\treturn [];\n\t}\n\n\tif (contents.message) {\n\t\tthrow new Error(contents.message);\n\t}\n\n\tfor (const item of contents) {\n\t\tif (item.type === 'file') {\n\t\t\tfiles.push(getFullData ? item : item.path);\n\t\t} else if (item.type === 'dir') {\n\t\t\trequests.push(viaContentsApi({\n\t\t\t\tuser,\n\t\t\t\trepository,\n\t\t\t\tref,\n\t\t\t\tdirectory: item.path,\n\t\t\t\ttoken,\n\t\t\t\tgetFullData\n\t\t\t}));\n\t\t}\n\t}\n\n\treturn files.concat(...await Promise.all(requests));\n}\n\n// Great for downloads with many sub directories\n// Pros: one request + maybe doesn't require token\n// Cons: huge on huge repos + may be truncated\nasync function viaTreesApi({\n\tuser,\n\trepository,\n\tref = 'HEAD',\n\tdirectory,\n\ttoken,\n\tgetFullData = false\n}) {\n\tif (!directory.endsWith('/')) {\n\t\tdirectory += '/';\n\t}\n\n\tconst files = [];\n\tconst contents = await api(`${user}/${repository}/git/trees/${ref}?recursive=1`, token);\n\tif (contents.message) {\n\t\tthrow new Error(contents.message);\n\t}\n\n\tfor (const item of contents.tree) {\n\t\tif (item.type === 'blob' && item.path.startsWith(directory)) {\n\t\t\tfiles.push(getFullData ? item : item.path);\n\t\t}\n\t}\n\n\tfiles.truncated = contents.truncated;\n\treturn files;\n}\n\nmodule.exports.viaContentsApi = viaContentsApi;\nmodule.exports.viaContentApi = viaContentsApi;\nmodule.exports.viaTreesApi = viaTreesApi;\nmodule.exports.viaTreeApi = viaTreesApi;\n","/* global JSZip */\nimport saveFile from 'save-file';\nimport listContent from 'list-github-dir-content';\n\n// Matches '/<re/po>/tree/<ref>/<dir>'\nconst urlParserRegex = /^[/]([^/]+)[/]([^/]+)[/]tree[/]([^/]+)[/](.*)/;\n\nfunction updateStatus(status, ...extra) {\n\tconst el = document.querySelector('.status');\n\tel.innerHTML = status || `\n\t\t<strong>download-directory • github • io</strong>\n\t\t<form>\n\t\t\t<input name=\"url\" type=\"url\" size=\"38\" placeholder=\"Paste GitHub.com folder URL + press Enter\">\n\t\t</form>\n\t`;\n\tconsole.log(el.textContent, ...extra);\n}\n\nasync function waitForToken() {\n\tconst input = document.querySelector('#token');\n\tinput.addEventListener('input', () => {\n\t\tif (input.checkValidity()) {\n\t\t\tlocalStorage.token = input.value;\n\t\t}\n\t});\n\n\tif (localStorage.token) {\n\t\tinput.value = localStorage.token;\n\t} else {\n\t\tconst toggle = document.querySelector('#token-toggle');\n\t\ttoggle.checked = true;\n\t\tupdateStatus('Waiting for token...');\n\t\tawait new Promise(resolve => {\n\t\t\tinput.addEventListener('input', function handler() {\n\t\t\t\tif (input.checkValidity()) {\n\t\t\t\t\ttoggle.checked = false;\n\t\t\t\t\tresolve();\n\t\t\t\t\tinput.removeEventListener('input', handler);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n}\n\nasync function fetchRepoInfo(repo) {\n\tconst response = await fetch(`https://api.github.com/repos/${repo}`, {\n\t\theaders: {\n\t\t\tAuthorization: `Bearer ${localStorage.token}`\n\t\t}\n\t});\n\n\tswitch (response.status) {\n\t\tcase 401:\n\t\t\tupdateStatus('⚠ The token provided is invalid or has been revoked.', {token: localStorage.token});\n\t\t\tthrow new Error('Invalid token');\n\n\t\tcase 403:\n\t\t\t// See https://developer.github.com/v3/#rate-limiting\n\t\t\tif (response.headers.get('X-RateLimit-Remaining') === '0') {\n\t\t\t\tupdateStatus('⚠ Your token rate limit has been exceeded.', {token: localStorage.token});\n\t\t\t\tthrow new Error('Rate limit exceeded');\n\t\t\t}\n\n\t\t\tbreak;\n\n\t\tcase 404:\n\t\t\tupdateStatus('⚠ Repository was not found.', {repo});\n\t\t\tthrow new Error('Repository not found');\n\n\t\tdefault:\n\t}\n\n\tif (!response.ok) {\n\t\tupdateStatus('⚠ Could not obtain repository data from the GitHub API.', {repo, response});\n\t\tthrow new Error('Fetch error');\n\t}\n\n\treturn response.json();\n}\n\nasync function init() {\n\tawait waitForToken();\n\n\tlet user;\n\tlet repository;\n\tlet ref;\n\tlet dir;\n\n\ttry {\n\t\tconst query = new URLSearchParams(location.search);\n\t\tconst parsedUrl = new URL(query.get('url'));\n\t\t[, user, repository, ref, dir] = urlParserRegex.exec(parsedUrl.pathname);\n\n\t\tconsole.log('Source:', {user, repository, ref, dir});\n\t} catch {\n\t\treturn updateStatus();\n\t}\n\n\tif (!navigator.onLine) {\n\t\tupdateStatus('⚠ You are offline.');\n\t\tthrow new Error('You are offline');\n\t}\n\n\tupdateStatus('Retrieving directory info…');\n\n\tconst {private: repoIsPrivate} = await fetchRepoInfo(`${user}/${repository}`);\n\n\tconst files = await listContent.viaTreesApi({\n\t\tuser,\n\t\trepository,\n\t\tref,\n\t\tdirectory: decodeURIComponent(dir),\n\t\ttoken: localStorage.token,\n\t\tgetFullData: true\n\t});\n\n\tif (files.length === 0) {\n\t\tupdateStatus('No files to download');\n\t\treturn;\n\t}\n\n\tupdateStatus(`Downloading (0/${files.length}) files…`, '\\n• ' + files.map(file => file.path).join('\\n• '));\n\n\tconst controller = new AbortController();\n\n\tconst fetchPublicFile = async file => {\n\t\tconst response = await fetch(`https://raw.githubusercontent.com/${user}/${repository}/${ref}/${file.path}`, {\n\t\t\tsignal: controller.signal\n\t\t});\n\n\t\tif (!response.ok) {\n\t\t\tthrow new Error(`HTTP ${response.statusText} for ${file.path}`);\n\t\t}\n\n\t\treturn response.blob();\n\t};\n\n\tconst fetchPrivateFile = async file => {\n\t\tconst response = await fetch(file.url, {\n\t\t\theaders: {\n\t\t\t\tAuthorization: `Bearer ${localStorage.token}`\n\t\t\t},\n\t\t\tsignal: controller.signal\n\t\t});\n\n\t\tif (!response.ok) {\n\t\t\tthrow new Error(`HTTP ${response.statusText} for ${file.path}`);\n\t\t}\n\n\t\tconst {content} = await response.json();\n\t\tconst decoder = await fetch(`data:application/octet-stream;base64,${content}`);\n\t\treturn decoder.blob();\n\t};\n\n\tlet downloaded = 0;\n\tconst zip = new JSZip();\n\n\tconst download = async file => {\n\t\tconst blob = repoIsPrivate ?\n\t\t\tawait fetchPrivateFile(file) :\n\t\t\tawait fetchPublicFile(file);\n\n\t\tdownloaded++;\n\t\tupdateStatus(`Downloading (${downloaded}/${files.length}) files…`, file.path);\n\n\t\tzip.file(file.path.replace(dir + '/', ''), blob, {\n\t\t\tbinary: true\n\t\t});\n\t};\n\n\ttry {\n\t\tawait Promise.all(files.map(download));\n\t} catch (error) {\n\t\tcontroller.abort();\n\n\t\tif (!navigator.onLine) {\n\t\t\tupdateStatus('⚠ Could not download all files, network connection lost.');\n\t\t} else if (error.message.startsWith('HTTP ')) {\n\t\t\tupdateStatus('⚠ Could not download all files.');\n\t\t} else {\n\t\t\tupdateStatus('⚠ Some files were blocked from downloading, try to disable any ad blockers and refresh the page.');\n\t\t}\n\n\t\tthrow error;\n\t}\n\n\tupdateStatus(`Zipping ${downloaded} files…`);\n\n\tconst zipBlob = await zip.generateAsync({\n\t\ttype: 'blob'\n\t});\n\n\tawait saveFile(zipBlob, `${user} ${repository} ${ref} ${dir}.zip`.replace(/\\//, '-'));\n\tupdateStatus(`Downloaded ${downloaded} files! Done!`);\n}\n\ninit();\n\nwindow.addEventListener('load', () => {\n\tnavigator.serviceWorker.register('service-worker.js');\n});\n"]}